#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define N 5

// Функция для генерации случайной матрицы смежности
void genM(int matrix[N][N]) {
    srand(time(NULL));
    for (int i = 0; i < N; i++) {
        for (int j = i; j < N; j++) {
            if (i == j) {
                matrix[i][j] = 0; // Нет петель
            } else {
                int edge = rand() % 2; // Случайное ребро (0 или 1)
                matrix[i][j] = edge;
                matrix[j][i] = edge; // Симметричное значение для неориентированного графа
            }
        }
    }
}

// Функция для вывода матрицы смежности
void printM(int matrix[N][N]) {
    printf("Матрица смежности:\n");
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            printf("%d ", matrix[i][j]);
        }
        printf("\n");
    }
}

// Обход матрицы
void DFS(int matrix[N][N], int vis[N], int node) {
    vis[node] = 1;
    printf("%d ", node);

    for (int i = 0; i < N; i++) {
        if (matrix[node][i] == 1 && !vis[i]) {
            DFS(matrix, vis, i);
        }
    }
}

int main() {
    int matrix[N][N];
    int vis[N] = {0};

    genM(matrix); // Используем правильное имя функции
    printM(matrix);

    printf("Обход в глубину (DFS):\n");
    DFS(matrix, vis, 0); // Начало обхода с вершины 0

    return 0;
}
